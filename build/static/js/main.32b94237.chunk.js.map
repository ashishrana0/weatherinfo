{"version":3,"sources":["components/Wdetails.js","components/Wcard.js","components/Weather.js","App.js","index.js"],"names":["Wdetails","tempInfo","tempIcon","className","Wcard","useState","cloudInfo","setcloudInfo","temp","pressure","humidity","weatherMood","country","name","speed","useEffect","Date","toLocaleString","Weather","apikey","searchValue","setsearchValue","settempInfo","getDetails","a","url","fetch","res","json","data","main","weather","sys","wind","console","log","htmlFor","type","id","placeholder","value","onChange","e","target","onClick","App","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32b94237.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Wdetails = ({ tempInfo, tempIcon }) => {\r\n  return (\r\n    <>  \r\n      <div className=\"col-md-2\">\r\n        <p className=\"card-text\">{tempInfo}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wdetails;\r\n","import React,{useState, useEffect} from \"react\";\r\n\r\nimport Wdetails from \"./Wdetails\";\r\nconst Wcard = ({ tempInfo }) => {\r\n    const [cloudInfo, setcloudInfo] = useState(\"\");\r\n  const { temp, pressure, humidity, weatherMood, country, name, speed } =\r\n    tempInfo;\r\n    useEffect(() => {\r\n        if(weatherMood){\r\n            switch (weatherMood) {\r\n                case \"Clear\" : setcloudInfo(\"wi-day-sunny\")\r\n                break;\r\n                case \"Clouds\" : setcloudInfo(\"wi-day-cloudy\")\r\n                break;\r\n                case \"Haze\" : setcloudInfo(\"wi-day-haze\")\r\n                break;\r\n                case \"fog\" : setcloudInfo(\"wi-day-fog\")\r\n                break;\r\n                case \"rain\" : setcloudInfo(\"wi-day-rain\")\r\n                break;\r\n                case \"Mist\" : setcloudInfo(\"wi-dust\")\r\n                break;\r\n                default: setcloudInfo(\"wi-day-sunny\")\r\n                    break;\r\n                }\r\n            }\r\n    }, [weatherMood]);\r\n  return (\r\n    <>\r\n      <div className=\"card-body\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 \">\r\n              <h2>\r\n                <i className={`wi ${cloudInfo}`}></i>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4 p-2\">\r\n              <h2>{temp}&deg;C</h2>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <h4>{weatherMood}</h4>\r\n              <p>{country + \", \" + name}</p>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <h4>{new Date().toLocaleString()}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <h5 className=\"card-title\"></h5>\r\n      </div>\r\n      <div className=\"card-footer bg-transparent border-success \">\r\n        <div className=\"row fs-6 \">\r\n          <div className=\"col-md-2 fs-2\">\r\n            <i className={`wi wi-strong-wind`}></i>\r\n          </div>\r\n          <Wdetails tempInfo={speed + \"km/h \\n Speed\"} tempIcon={weatherMood} />\r\n          <div className=\"col-md-2 fs-2\">\r\n            <i className={`wi wi-humidity`}></i>\r\n          </div>\r\n          <Wdetails tempInfo={humidity + \"% \\n Humidity\"} tempIcon={humidity} />\r\n          <div className=\"col-md-2 fs-2\">\r\n            <i className={`wi wi-thermometer-exterior`}></i>\r\n          </div>\r\n          <Wdetails tempInfo={pressure + \"\\n Pressure\"} tempIcon={pressure} />\r\n          \r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wcard;","import React,{useState, useEffect} from \"react\";\r\nimport Wcard from \"./Wcard\";\r\n\r\nconst Weather = ({apikey}) => {\r\n    const [searchValue, setsearchValue] = useState(\"Gurugram\");\r\n    const [tempInfo, settempInfo] = useState({});\r\n    const getDetails = async ()=>{\r\n        let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=${apikey}`;\r\n        try {\r\n            const res  = await fetch(url);\r\n            const data = await res.json(res);\r\n            const {temp, pressure, humidity}= data.main;\r\n            const {main: weatherMood}= data.weather[0];\r\n            const {country}= data.sys;\r\n            const {name}= data;\r\n            const {speed}= data.wind;\r\n            const weatherInfo = {\r\n                temp, pressure, humidity, weatherMood, country, name, speed\r\n            };\r\n            settempInfo(weatherInfo);\r\n            // console.log(temp);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getDetails();\r\n    }, []);\r\n  return (\r\n    <>\r\n      <div className=\"container my-5\">\r\n        <div className=\"row text-center\">\r\n          <div className=\"col-md-6 mx-auto\">\r\n          <div className=\"card border-success mb-3\">\r\n        <div className=\"card-header bg-transparent border-success text-center\">\r\n          <h2>Get Weather Info</h2>\r\n          <div className=\"col-md-12\">\r\n            <label className=\"visually-hidden\" htmlFor=\"specificSizeInputGroupUsername\">\r\n              Search\r\n            </label>\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"specificSizeInputGroupUsername\"\r\n                placeholder=\"Search here...\"\r\n                value={searchValue}\r\n                onChange={(e) => setsearchValue(e.target.value)}\r\n              />\r\n              <div className=\"\">\r\n                <button className=\"btn btn-success\" onClick={getDetails}>\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n            <Wcard tempInfo={tempInfo}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import './App.css';\nimport Weather from './components/Weather';\nfunction App() {\n  // const apikey = process.env.REACT_APP_API_KEY;\n  return (\n    <>\n      <Weather apikey={process.env.REACT_APP_API_KEY}/>\n    </>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}